@using Kendo.Mvc.UI;
@using Index.Commons;

@{
    ViewBag.Title = "DeclaracionConstancia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <!-- start: FORM VALIDATION 1 PANEL -->
        <div class="panel panel-default">
            <div class="panel-heading">
                <div class="view-title">
                    <div class="view-text">Declaración Constancias</div>
                </div>
                <div class="cr-filter">
                    <div class="col-2">
                        <div class="col-12 title">Fecha inicio</div>
                        <div class="col-12 item">
                            @(Html.Kendo().DatePicker()
                                .Name("StartDate")
                                .HtmlAttributes(new { Style = "width:100%;" })
                                .Format("dd/MM/yyyy")
                                .Events(e=> {
                                    e.Change("StartDateChange");
                                })
                            )
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="col-12 title">Fecha fin</div>
                        <div class="col-12 item">
                            @(Html.Kendo().DatePicker()
                                .Name("EndDate")
                                .HtmlAttributes(new { Style = "width:100%;" })
                                .Format("dd/MM/yyyy")
                                .Events(e =>
                                {
                                    e.Change("EndDateChange");
                                })
                            )
                        </div>
                    </div>
                    @*<div class="col-2">
                        <div class="col-12 title">Transmisión</div>
                        <div class="col-12 item">
                            @(Html.Kendo().DropDownList()
                                  .Name("Transmition")
                                  .DataTextField("Name")
                                  .DataValueField("Id")
                                  .SelectedIndex(0)
                                  .Filter("contains")
                                  .BindTo(new List<GenericDropDownList>() {
                                      new GenericDropDownList() {
                                          Id = 1,
                                          Name = "Todos"
                                      },
                                      new GenericDropDownList() {
                                          Id = 2,
                                          Name = "Transmitidos"
                                      }
                                      ,
                                      new GenericDropDownList() {
                                          Id = 3,
                                          Name = "No Transmitidos"
                                      }
                                  })
                                  .Events(e =>
                                  {
                                      //e.Select("NewFechaSelect");
                                  })
                                  .HtmlAttributes(new { style = "width: 100%" })
                            )
                        </div>
                    </div>*@
                    <div class="col-1">
                        <div class="col-12 title">Documentos</div>
                        <div class="col-12 item">
                            @(Html.Kendo().Button()
                                .Name("btnFilterDocuments")
                                .Content("Documentos")
                                .Events(e =>
                                {
                                    e.Click("btnFilterDocumentsClick");
                                })
                            )
                        </div>
                    </div>
                    @*<div class="col-1">
                        <div class="col-12 title">Congelados</div>
                        <div class="col-12 item">
                            @(Html.Kendo().CheckBox()
                                .Name("Frozen")
                                .HtmlAttributes(new { @style = "margin-left: 22px;" })
                            )
                        </div>
                    </div>*@
                    @(Html.Kendo().ToolBar()
                        .Name("KendoToolbar")
                        .HtmlAttributes(new { @style = "text-align: right;float: right; min-width: 100px; margin-top: 19px;" })
                        .Items(i =>
                        {
                            i.Add().Type(CommandType.Button).ImageUrl(Url.Content("~/Content/Images/Filter.png")).Click("btnFiltrarClick");
                            i.Add().Type(CommandType.Button).ImageUrl(Url.Content("~/Content/Images/PDFFILE.png")).Click("btnDownloadPdf");
                            i.Add().Type(CommandType.Button).ImageUrl(Url.Content("~/Content/Images/XLSFILE.png")).Click("btnDownloadXls");
                            i.Add().Type(CommandType.Button).ImageUrl(Url.Content("~/Content/Images/FullScreen.png")).Click("btnFullScreen");
                        })
                    )
                </div>
            </div>
            <div class="panel-body">
                <div class="cr-report">
                    <iframe style="border:none;" id="rptViewer" width="400" height="200"></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Window()
    .Name("wndFullScreen")
    .Title("Pantalla completa")
    .Width(800)
    .Height(500)
    .Modal(true)
    .Visible(false)
    .Actions(a =>
    {
        a.Close();
    })
    .Content(@<text>
        <iframe style="border:none;" id="rptViewerFullScreen" width="400" height="200"></iframe>
    </text>)
)

@(Html.Kendo().Window()
    .Name("wndFiltroDocumentos")
    .Title("Filtro por documentos")
    .Width(900)
    .Modal(true)
    .Visible(false)
    .Actions(a =>
    {
        a.Maximize();
        a.Close();
    })
)

<style>
    .cr-filter {
        display: inline-block;
        width: 100%;
        border-top: solid;
        border-width: 0.4px;
        padding: 0px;
        margin: 0px;
    }

    #btnFiltrar {
        border: solid;
        border-width: 0.4px;
        margin-top: 20px;
        float: right;
    }

    #wndFullScreen {
        overflow: hidden;
    }
</style>

<script>
    var frame = $("#rptViewer"), FilePath = null, strFileHeader = '', strFileDetail = '';

    $(document).ready(function () {
        frame.css({ width: "100%", height: "400px" });
        frame.attr('src', "@Url.Action("BlankReport", "Reportes")");

        //var startdate = $("#StartDate").data("kendoDatePicker");
        //startdate.value(GetDate());
        //startdate.open();
    });

    function btnFullScreen(e) {
        if (FilePath != null) {
            $("#loading").fadeIn();
            var win = $("#wndFullScreen").data("kendoWindow");
            var fsframe = $("#rptViewerFullScreen");
            setTimeout(function () {
                win.center();
                win.open();
                win.maximize();

                fsframe.css({ width: "100%", height: "100%" });
                fsframe.attr('src', FilePath + '.pdf');
                $("#loading").fadeOut();
            }, 700);
        }
    }

    function btnDownloadPdf(e) {
        if (FilePath != null) {
            window.location.href = '@Url.Action("Downloads", "Archivos")' + '?UrlFile=' + FilePath + '.pdf';
        }
    }

    function btnDownloadXls(e) {
        if (FilePath != null) {
            window.location.href = '@Url.Action("Downloads", "Archivos")' + '?UrlFile=' + FilePath + '.xls';
        }
    }

    function StartDateChange(e) {
        var startdate = $("#StartDate").data("kendoDatePicker");
        var enddate = $("#EndDate").data("kendoDatePicker");
        var sdate = new Date(startdate.value());
        var edate = sdate.setMonth(sdate.getMonth() + 1);
        enddate.min(startdate.value());
        enddate.value(kendo.toString(sdate, "dd/MM/yyyy"));
        enddate.open();
    }

    function EndDateChange(e) {
        //var dropdown = $("#Transmition").data("kendoDropDownList");
        //dropdown.open();
    }

    function btnFiltrarClick(e) {
        $("#loading").fadeIn();

        setTimeout(function () {
            var startdate = $("#StartDate").data("kendoDatePicker");
            var enddate = $("#EndDate").data("kendoDatePicker");

            if (startdate.value() == null || enddate.value() == null) {
                alert('Debe seleccionar los parametros');
                $("#loading").fadeOut();
            }
            else {
                FilePath = wsExecute("GET", "json", "@Url.Action("DeclaracionConstanciaData", "Reportes")", {
                    StartDate: kendo.toString(startdate.value(), 'yyyy-MM-dd'),
                    EndDate: kendo.toString(enddate.value(), 'yyyy-MM-dd'),
                    FileHeaderList: (strFileHeader == '') ? null : strFileHeader,
                    FileDetailList: (strFileDetail == '') ? null : strFileDetail,
                    UseFreeze: $('#Frozen').is(':checked')
                }, false);

                var url = FilePath + '.pdf';
                frame.attr('src', url);

                setTimeout(function () {
                    $("#loading").fadeOut();
                }, 700);
            }
        }, 500)
    }

    function btnFilterDocumentsClick(e){
        showDocumentFilter();
    }

    function showDocumentFilter() {
        $("#loading").fadeIn();
        var startdate = $("#StartDate").data("kendoDatePicker");
        var enddate = $("#EndDate").data("kendoDatePicker");

        if (startdate.value() == null || enddate.value() == null) {
            alert('Debe seleccionar los parametros');
            $("#loading").fadeOut();
        }
        else {
            var transmition = $("#Transmition").data("kendoDropDownList");
            var win = $("#wndFiltroDocumentos").data("kendoWindow");
            strFileDetail = '';
            strFileHeader = '';

            win.refresh({
                url: "@Url.Action("DeclaracionesFiltro", "Reportes")", data: {
                StartDate: kendo.toString(startdate.value(), 'yyyy-MM-dd'),
                EndDate: kendo.toString(enddate.value(), 'yyyy-MM-dd'),
                GetTransmited: null
                }
            });

            setTimeout(function () {
                win.open();
                win.center();
                setTimeout(function () {
                    win.center();
                    setTimeout(function () {
                        $("#loading").fadeOut();
                    }, 100);
                }, 100);
            }, 100);
        }
    }

    function grdFileHeaderChange(e) {
        var selection = this.select();
        strFileHeader = '';
        for (var i = 0; i < selection.length; i++) {

            var item = this.dataItem(selection[i]);
            if(i == (selection.length-1)){
                strFileHeader = strFileHeader + (item.Id.toString());
            }
            else{
                strFileHeader = strFileHeader + (item.Id.toString() + ',');
            }
        }
        console.log(strFileHeader);
    }

    function grdDetail_Change(e){
        var selection = this.select();
        strFileDetail = '';
        for (var i = 0; i < selection.length; i++) {

            var item = this.dataItem(selection[i]);
            if(i == (selection.length-1)){
                strFileDetail = strFileDetail + (item.Id.toString());
            }
            else{
                strFileDetail = strFileDetail + (item.Id.toString() + ',');
            }
        }
        console.log(strFileDetail);
    }

    var expandedRow;
    function grdFileHeaderExpand(e) {
        if (expandedRow != null && expandedRow[0] != e.masterRow[0]) {
            var grid = $('#grdFileHeader').data('kendoGrid');
            grid.collapseRow(expandedRow);
        }
        expandedRow = e.masterRow;
    }
</script>

<script id="DetailTemplate" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<FileDetail>()
                    .Name("grdDetail_#=Id#")
                    .HtmlAttributes(new { @style = "width:80%;height:200px;" })
                    .Events(e =>
                    {
                        e.Change("grdDetail_Change");
                    })
                    .Columns(c =>
                    {
                        c.Bound(p => p.Id);
                        c.Bound(p => p.IdFileHeader).Hidden(true);
                        c.Bound(p => p.IdState).Hidden(true);
                        c.Bound(p => p.DisplayItemName).Width(250).Title("Producto");
                        c.Bound(p => p.TransactionLine).Width(100).Title("Línea");
                        c.Bound(p => p.Quantity).Width(150).Title("Cantidad").ClientTemplate("\\#=kendo.toString(Quantity,'n6')\\#");
                        c.Bound(p => p.CIFQ).Width(200).Title("CIF").ClientTemplate("\\#=(CIFQ == null) ? '' : kendo.toString(CIFQ,'c6')\\#");
                        c.Bound(p => p.CustomDuties).Width(200).Title("DAI").ClientTemplate("\\#=(CustomDuties == null ) ? '' : kendo.toString(CustomDuties,'c6')\\#");
                        c.Bound(p => p.IVA).Width(200).Filterable(false).Title("IVA").ClientTemplate("\\#=(IVA == null) ? '' : kendo.toString(IVA,'c6')\\#");
                    })
                    .Selectable(s =>
                    {
                        s.Mode(GridSelectionMode.Multiple);
                    })
                    .Scrollable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Model(m =>
                        {
                            m.Id(o => o.Id);
                        })
                        .Read(r => r.Action("DeclaracionesFiltroReadDetail", "Reportes", new { IdFileHeader = "#=Id#" }))
                     )
                     .ToClientTemplate()
    )
</script>
